version: '3.8'

services:
  backend:
    build:
      context: ./fastapi_backend
      dockerfile: Dockerfile
    volumes:
      - ./static:/app/static
      - ./media:/app/media
      - ./fastapi_backend/static:/app/fastapi_backend/static
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./app.db}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend_build:/app/build
      - ./frontend/public/media:/app/public/media
    environment:
      - NODE_ENV=production
      - PUBLIC_URL=/
      - GENERATE_SOURCEMAP=false
      - REACT_APP_API_URL=/api
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Публикуем порт 80
    volumes:
      - ./static:/app/static:ro
      - ./media:/app/media:ro
      - ./fastapi_backend/static:/app/fastapi_backend/static:ro  # Добавляем :ro для только чтения
      - frontend_build:/usr/share/nginx/html:ro
      - ./frontend/public/media:/usr/share/nginx/html/media:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  frontend_build:
    driver: local 